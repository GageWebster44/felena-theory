import React, { useEffect, useState, useContext } from 'react';
import { createBrowserSupabaseClient } from '@supabase/auth-helpers-nextjs';
import { UserXPContext } from './_app';
import HUDFrame from '../components/HUDFrame';
import './styles/dao.css';

const DAOControl = () => {
Â Â const [proposals, setProposals] = useState<any[]>([]);
Â Â const { userXP } = useContext(UserXPContext);

Â Â const TIER_THRESHOLD = 5000; // Tier 3: Override access

Â Â useEffect(() => {
Â Â Â Â const sound = new Audio('/sounds/dao_interface_online.mp3');
Â Â Â Â sound.volume = 0.5;
Â Â Â Â sound.play();

Â Â Â Â const fetchProposals = async () => {
Â Â Â Â Â Â const supabase = createBrowserSupabaseClient();
Â Â Â Â Â Â const { data } = await supabase
Â Â Â Â Â Â Â Â .from('dao_proposals')
Â Â Â Â Â Â Â Â .select('*')
Â Â Â Â Â Â Â Â .order('created_at', { ascending: false });
Â Â Â Â Â Â if (data) setProposals(data);
Â Â Â Â };

Â Â Â Â if (userXP >= TIER_THRESHOLD) {
Â Â Â Â Â Â fetchProposals();
Â Â Â Â }
Â Â }, [userXP]);

Â Â if (userXP < TIER_THRESHOLD) {
Â Â Â Â return (
import Head from 'next/head';
<Head>
  <title>Felena Theory</title>
  <meta name="description" content="Enter the XP Quantum Grid." />
</Head>

Â Â Â Â Â Â <HUDFrame>
Â Â Â Â Â Â Â Â <div className="dao-container tactical-ui" style={{ background: '#000', color: '#ff4444', padding: '3rem', fontFamily: 'Orbitron' }}>
Â Â Â Â Â Â Â Â Â Â <h1>ðŸ›‘ ACCESS DENIED</h1>
Â Â Â Â Â Â Â Â Â Â <p>This DAO interface requires Tier 3 (Override) or higher.</p>
Â Â Â Â Â Â Â Â </div>
Â Â Â Â Â Â </HUDFrame>
Â Â Â Â );
Â Â }

Â Â return (
Â Â Â Â <HUDFrame>
Â Â Â Â Â Â <div className="dao-container tactical-ui" style={{ fontFamily: 'Orbitron', padding: '2rem', position: 'relative' }}>
Â Â Â Â Â Â Â Â {/* Operator HUD */}
Â Â Â Â Â Â Â Â <div style={{ position: 'absolute', top: 20, right: 20, textAlign: 'right' }}>
Â Â Â Â Â Â Â Â Â Â <p style={{ color: '#ffffff', fontWeight: 'bold' }}>XP: {userXP.toLocaleString()}</p>
Â Â Â Â Â Â Â Â Â Â <p style={{ color: '#888' }}>Clearance: Tier {getTierFromXP(userXP)}</p>
Â Â Â Â Â Â Â Â </div>

Â Â Â Â Â Â Â Â <h1 className="dao-header">ðŸ›¡ DAO Intelligence Node</h1>
Â Â Â Â Â Â Â Â <p className="dao-description">
Â Â Â Â Â Â Â Â Â Â This classified interface grants access to DAO voting logs, governance input, and strategic coordination feeds.
Â Â Â Â Â Â Â Â </p>

Â Â Â Â Â Â Â Â {/* Active Proposals */}
Â Â Â Â Â Â Â Â <section className="dao-frame-block" style={glowBox}>
Â Â Â Â Â Â Â Â Â Â <h2>ðŸ—³ Active Proposals</h2>
Â Â Â Â Â Â Â Â Â Â <p>Operators can view and track system-wide vote activity in real-time.</p>
Â Â Â Â Â Â Â Â Â Â {proposals.length === 0 ? (
Â Â Â Â Â Â Â Â Â Â Â Â <p style={{ color: '#888' }}>No proposals available.</p>
Â Â Â Â Â Â Â Â Â Â ) : (
Â Â Â Â Â Â Â Â Â Â Â Â proposals.map((p) => (
Â Â Â Â Â Â Â Â Â Â Â Â Â Â <div key={p.id} className="dao-proposal-tile">
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <h3>Proposal #{p.id}: {p.title}</h3>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <p>{p.description}</p>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <p className="dao-meta">ðŸ§  Created: {new Date(p.created_at).toLocaleDateString()}</p>
Â Â Â Â Â Â Â Â Â Â Â Â Â Â </div>
Â Â Â Â Â Â Â Â Â Â Â Â ))
Â Â Â Â Â Â Â Â Â Â )}
Â Â Â Â Â Â Â Â </section>

Â Â Â Â Â Â Â Â {/* Tactical Voting HUD */}
Â Â Â Â Â Â Â Â <section className="dao-frame-block" style={glowBox}>
Â Â Â Â Â Â Â Â Â Â <h2>ðŸ›° Tactical Voting HUD</h2>
Â Â Â Â Â Â Â Â Â Â <p>All decision logs are cryptographically timestamped and immutable.</p>
Â Â Â Â Â Â Â Â Â Â <p className="dao-warning">Read-only view. Voting occurs in <code>dao-vote.tsx</code>.</p>
Â Â Â Â Â Â Â Â </section>

Â Â Â Â Â Â Â Â {/* Signal Coordination */}
Â Â Â Â Â Â Â Â <section className="dao-frame-block" style={glowBox}>
Â Â Â Â Â Â Â Â Â Â <h2>ðŸ“ˆ Signal Coordination</h2>
Â Â Â Â Â Â Â Â Â Â <p>DAO outcomes route to engine directives for autonomous optimization across grid layers.</p>
Â Â Â Â Â Â Â Â </section>
Â Â Â Â Â Â </div>
Â Â Â Â </HUDFrame>
Â Â );
};

const getTierFromXP = (xp: number): string => {
Â Â if (xp >= 50000) return '6: Final Ascension';
Â Â if (xp >= 25000) return '5: Dominator';
Â Â if (xp >= 10000) return '4: Legendary';
Â Â if (xp >= 5000) return '3: Override';
Â Â if (xp >= 1000) return '2: Operator';
Â Â if (xp >= 100) return '1: Initiate';
Â Â return '0: Observer';
};

const glowBox: React.CSSProperties = {
Â Â background: '#111',
Â Â border: '1px solid #333',
Â Â borderRadius: '12px',
Â Â padding: '1rem',
Â Â marginBottom: '2rem',
Â Â boxShadow: '0 0 12px rgba(0,255,255,0.1)'
};

export default DAOControl;