// pages/api/notifyDevCandidates.ts
import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
Â Â process.env.NEXT_PUBLIC_SUPABASE_URL!,
Â Â process.env.SUPABASE_SERVICE_ROLE_KEY!
)

export default async function handler(req, res) {
Â Â if (req.method !== 'POST') return res.status(405).json({ error: 'Method not allowed' })

Â Â const { data: candidates, error } = await supabase
Â Â Â Â .from('user_profiles')
Â Â Â Â .select('id, username, xp')
Â Â Â Â .gte('xp', 100000)
Â Â Â Â .neq('devCandidateStatus', 'approved')

Â Â if (error) return res.status(500).json({ error: error.message })
Â Â if (!candidates || candidates.length === 0) return res.status(200).json({ message: 'No new candidates' })

Â Â const alerts = candidates.map(user => `ðŸš¨ *Dev Candidate Found*:
â€¢ ID: ${user.id}
â€¢ XP: ${user.xp}
â€¢ Username: ${user.username || 'N/A'}`)

Â Â await fetch(process.env.RECRUITING_WEBHOOK_URL!, {
Â Â Â Â method: 'POST',
Â Â Â Â headers: { 'Content-Type': 'application/json' },
Â Â Â Â body: JSON.stringify({ content: alerts.join('\n\n') })
Â Â })

Â Â res.status(200).json({ message: `${candidates.length} notifications sent.` })
}